=content_for :stylesheets do
  =stylesheet_link_tag :promesa  
  
=content_for :scripts do
  <script src="http://github.com/janl/mustache.js/raw/master/mustache.js"></script>
  <script src="https://raw.github.com/xoxco/jQuery-Tags-Input/master/jquery.tagsinput.js"></script>
  =javascript_include_tag :promesa
  
- edition = params[:action] == 'editar'

#denuncia    
  .promesa
    - url = crear_promesas_path
    - url = actualizar_promesa_path if edition
    
    =form_for @promesa, :url => url, |
      :validate => true, :html => {:multipart => true} do |f|
      
      - if edition
        = f.hidden_field :id 
      
      %div
        .left
          %h1 Nueva Promesa
        .right.denuncia_anonima
          =f.label :denuncia_anonima, 'denuncia anonima'
          =f.check_box :denuncia_anonima
        %br.clear
      
      = f.error_messages
      
      %fieldset.info_funcionario
        %legend El que promete
        = f.fields_for :info_funcionario do |iff|
          - if edition
            = iff.hidden_field :id 
          .nombre
            =iff.label :nombre, 'Nombre: *'
            =iff.text_field :nombre, :required => 'required'
          .cargo
            =iff.label :cargo, 'Cargo:'
            =iff.text_field :cargo
          .entidad
            =iff.label :entidad, 'Entidad:'
            =iff.text_field :entidad
      
      %fieldset.lo_prometido
        %legend Lo prometido
        .lo_prometido
          =f.text_area :lo_prometido, :required => 'required'
          
        %script(type='text/javascript')
          $(document).ready(function(){ |
            $('#tags').tagsInput({ |
                autocomplete_url: '#{autocomplete_tag_name_promesas_path}', |
                width: '80%', |
                defaultText: 'agrega un tag' |
            }); |
          })
      
        .tags
          =f.label :tag_list, 'Tags:'
          =f.text_field :tag_list, :id=>'tags'
      
        .fecha_declaracion
          =f.label :fecha_declaracion, 'CÃºando:'
          =f.datepicker :fecha_declaracion
          
        .region
          =f.label :region, 'Region:'
          =f.collection_select :region_id, Region.all, :id, :nombre, {:prompt => '-- Selecciona --'}, :class => 'combobox'
            
      %fieldset.pruebas
        %legend Pruebas
        #pruebas
          = f.fields_for :pruebas do |pf|
            = render 'prueba/upload', :form => pf, :to_be => true
            - if edition
              = render 'prueba/upload', :form => pf, :to_be => false
        
        = render 'prueba/add'
      =f.submit(value='Guardar')
